#!/usr/bin/env node

/**
 * Copyright (c) 2018 Alakbar Ayyubov
 * 
 * @fileOverview Command line utility
 * @name pug-templates
 * @author Alakbar Ayyubov
 * @license MIT 
 *
 * Copyright 2018
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

const processor = require("../src/processor");
const fs        = require("fs");
const cmd       = require("commander");
const path      = require('path');

/**
 * Outputs the usage description
 */
function usage() {
	let usage = [
		"   Usage example:\n\n",
		"      # complie given Pug files and output templates to destination file:\n",
		"      pug-templates file1.pug file2.pug --out ./outputs/templates.js \n\n",
		"      # compile the content of the directory and output templates to destination file:\n",
		"      pug-templates --dir ./examples/ --out ./outputs/templates.js\n\n"
	]
	console.log(usage.join(''));
}

function processFiles(files) {
	// init the default directory
	let defaultDir = cmd.dir || `${__dirname}/../`;

	// process the file paths
	files = files.map((file) => {return path.join(defaultDir, file)});

	// if output file path is not given via the parameter, then defaulting to given folder
	let outputFile = cmd.out || path.join(defaultDir, "templates.js");

	processor(files, (err, outputStr) => {
		if(err) return console.log(err);

		fs.writeFile(outputFile, outputStr, (err) => {
			if(err) return console.log(err);
			return console.log("   Successfully created combined JavaScript template in:\n", outputFile);
		})
	});
}


/**
 * Processing the 'about' command
 */
cmd.command("about")
	.description("Gives the basic info about the usage\n")
	.action(() => {
		console.log("\n   This utility is for generating JavaScript templates from Pug files to use in browsers.\n")
	});

/**
 * Defining the commandline arguments
 */
cmd
	.version('1.0.0')
	.on('--help', usage)
	.option("-d, --dir <directory>", "Directory that holds the Pug files")
	.option("-o, --out <output>", "The output file path")
	.arguments("[files...]")
	.action((files) => {
		if(cmd.dir) return;
		if(files && files.length) {
			processFiles(files);
		}
	})
	.parse(process.argv);

// Directory takes priority over the file list
if(cmd.dir) {
	fs.readdir(cmd.dir, (err, files) => {
		if(err && err.code == "ENOENT") {
			console.log(`  Given path '${cmd.dir}' does not exist\n`);
			return cmd.emit("--help");
		}

		processFiles(files);
	})
}

